$font-stack: Raleway, Trebuchet, Tahoma, Arial, sans-serif;
$greenBlue: #297373;
$greenYellow: #a0d449;
$yellow: #ffcc33;
$brick: #af6652;
$lightBlue: #dcecec;
$corners: 5px;
$boxShadow: 0px 2px 2px 0px grey;
$bodyHeight: 85vh;
$hFHeight: 7.5vh;
$boxPadding: 15px;
$iPadWidth: 768px;
$iPadWidthL1: 767px;

%box {
  border-radius: $corners;
  box-shadow: $boxShadow;
  padding: $boxPadding;
  box-sizing: border-box;
}

%lightBlueBox {
  @extend %box;
  background-color: $lightBlue;
}
%brickBox {
  @extend %box;
  background-color: $brick;
}
%yellow-GreenBox {
  @extend %box;
  background-color: $greenYellow;
}
%blue-greenBox {
  @extend %box;
  background-color: $greenBlue;
}

%columnFlex {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

%wrapFlex {
  display: inline-flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

%rowFlex {
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

@mixin fitContent($property) {
  $property: moz-fit-content;
  $property: fit-content;
}

%headerDefaults {
  @include fitContent(height);
  @include fitContent(width);
  text-align: center;
  margin: 15px 15px 15px 15px;
  color: $yellow;
  font-weight: bold;
}

@mixin transform($property) {
  -webkit-transform: $property;
  -ms-transform: $property;
  transform: $property;
}
// Global Assignemnts
input {
  border: none;
  border-radius: $corners;
  margin: 10px 0px 5px 0px;
  font-size: 14pt;
  height: 18pt;
}

label {
  font-size: 14pt;
  font-weight: bold;
}
h1 {
  @extend %headerDefaults;
  font-size: 24pt;
}
h2 {
  @extend %headerDefaults;
  font-size: 20pt;
}

h3 {
  @extend %headerDefaults;
  font-size: 16pt;
}

h4 {
  @extend %headerDefaults;
  font-size: 14pt;
}
h5 {
  font-size: 12pt;
  color: black;
  margin: 5px 5px 5px 5px;
}

.App {
  box-sizing: border-box;
  font-family: $font-stack;
  max-width: 100vw;
  min-height: 100vh;
  width: 100vw;
  overflow-x: hidden;
  overflow-y: visible;
  background-color: $greenBlue;
  @extend %columnFlex;
}

#root {
  background-color: $greenBlue;
}
.buttonBox {
  @extend %wrapFlex;
}

button {
  background-color: $brick;
  box-shadow: none;
  border: none;
  border-radius: $corners;
  padding: 7px;
  margin: 10px 5px 10px 5px;
  color: $lightBlue;
  font-size: 12pt;
  letter-spacing: 0.75px;
}

strong {
  font-weight: bold;
}

a,
a:hover,
a:focus,
a:active,
Link,
Link:hover,
Link:focus,
Link:active,
.logoutLink {
  text-decoration: none;
  color: $yellow;
  font-size: 14pt;
  margin: 15px 0px 15px 0px;
  font-weight: bold;
}

em {
  font-style: italic;
}

// login Assignments

#loginContainer {
  @extend %columnFlex;
}
#loginComponent {
  @extend %rowFlex;
}

#siteTitleBorder {
  @extend %columnFlex;
  background-color: transparent;
  border: solid $brick 10px;
  max-height: 150px;
  max-width: 300px;
  min-height: 95px;
  min-width: 250px;
  height: 20vh;
  width: 70vw;
  box-shadow: $boxShadow;
  margin-bottom: 30px;
  color: $yellow;
}

#loginBox {
  @extend %columnFlex;
  @extend %yellow-GreenBox;
  max-height: 300px;
  max-width: 300px;
  min-height: 240px;
  min-width: 250px;
  width: 80vw;
  height: 45vh;
  margin-bottom: 20px;
}

#forgotPwdLink {
  color: black;
}

@media (min-width: $iPadWidth) {
  #mobileWelcomeText {
    display: none;
  }
  #loginWelcomeTextBox {
    // Unfortunatley, cannot @extend selectors accross media queries.
    border-radius: $corners;
    box-shadow: $boxShadow;
    padding: $boxPadding;
    box-sizing: border-box;
    background-color: $lightBlue;
    width: 400px;
    margin-bottom: 10px;
    margin-right: 20px;
  }
  .loginWelcomeText {
    color: black;
    line-height: 26.5pt;
  }
}
@media (max-width: $iPadWidthL1) {
  #loginWelcomeTextBox {
    display: none;
  }
}

/* Timeline */
#d3Container,
.d3Legend,
.legendBody {
  max-width: 1000px;
  width: 90vw;
}
.timelineSVG {
  border: solid $brick;
}
.timelineAxis {
  color: $brick;
}

.legendContainer {
  @extend %columnFlex;
}
.legendBody {
  display: inline-flex;
  justify-content: flex-start;
  @extend %brickBox;
  @include fitContent(height);
  color: $lightBlue;
  font-weight: bold;
  letter-spacing: 1.5pt;
  margin: 2.5px;
  font-size: 12pt;
  padding: 10px;
  width: 90vw;
}

.colorCode {
  width: 25px;
  height: 25px;
  float: left;
  margin-right: 15px;
}
#legendHeader {
  color: $brick;
}

// Nav Bar Assignments

nav {
  display: flex;
  width: 100vw;
  height: $hFHeight;
  min-height: 50px;
}

.linkBox {
  display: flex;
}

@media (min-width: $iPadWidth) {
  .linkBox {
    position: fixed;
    top: 0px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    background-color: $greenBlue;
    color: $yellow;
    justify-content: space-around;
    width: 100vw;
  }

  .hamburger {
    display: none;
  }
}

@media (max-width: $iPadWidthL1) {
  .invertColors {
    width: 25px;
    height: 4px;
    background-color: $greenBlue;
  }

  .hamburger {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    justify-content: space-between;
    width: 25px;
    height: 22px;
    margin: 2.2vh 20px 0px 0px;
    transition: all 0.3s;
  }
  .hamburgerPatties {
    background-color: $greenYellow;
    width: 25px;
    height: 4px;
  }

  nav {
    justify-content: flex-end;
  }

  .linkBox {
    position: static;
    flex-direction: column;
    height: 300px;
    background-color: $greenBlue;
    color: $yellow;
    opacity: 0.85;
    transition: all 0.4s;
    z-index: 2;
    padding: 15px;
  }

  // linkbox start
  .linkBoxClosed {
    @include transform(translate(220px, $hFHeight));
  }
  .linkBoxOpened {
    @include transform(translate(45px, $hFHeight));
  }
}

// Password Reset Request Assignments
#resetReqBox {
  @extend %columnFlex;
  height: 100vh;
}

#resetTitle {
  margin-top: 100px;
}
#resetReqButton {
  margin-left: 20px;
}

#resetRequestForm {
  @extend %wrapFlex;
}

// Submit Password Reset Assignemnts

#submitResetForm {
  @extend %wrapFlex;
}

#submitResetBody {
  @extend %columnFlex;
}

// Dashboard Assignemnts

#dashHeader {
  color: $brick;
  font-weight: bolder;
}

#timelineHeaderBox {
  @extend %wrapFlex;
}
#growingInfoBox {
  @extend %brickBox;
  max-width: 400px;
  width: 85vw;
  padding: $boxPadding;
  margin: 10px 0px 10px 0px;
}

#dashboardDecoration {
  @extend %columnFlex;
  @extend %lightBlueBox;
  padding: 20px;
  @include fitContent(height);
  @include fitContent(width);
}
// DashDropdowns

#dropdownLegend {
  color: black;
}
select {
  margin: 3px;
  border-radius: $corners;
  font-size: 13pt;
}

.dropdownBox {
  @extend %yellow-GreenBox;
  @extend %columnFlex;
  padding: $boxPadding;
  margin: 40px;
  width: 100vw;
  max-width: 900px;
}

// Switch Maker

.switchBody {
  border: dotted black thin;
  padding: 30px;
}
.switchPara {
  max-width: 950px;
}

[type="checkbox"] {
  opacity: 0;
}

.switchLabel {
  position: relative;
  right: 60px;
  top: 45px;
  font-weight: bold;
}

.switchPara {
  display: flex;
  justify-content: flex-start;
  width: 95vw;
  height: 31px;
}

.switchFlexBox {
  display: flex;
  justify-content: flex-end;
  width: 100%;
  height: 31px;
}
.switch {
  position: relative;
  top: -60px;
  width: 60px;
  height: 31px;
  margin-right: 20px;
}
.treatmentDesc {
  margin: 10px 10px 10px 10px;
}
/* label containing two span elements will be flex box configured for equal space between elements */
.swtich label {
  right: 0px;
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
}
/* The .switchSpan element will be positioned relatively with all transitions occuring within 0.3s  */
.switchSpan {
  position: relative;
  transition: all 0.3s;
}
/* Absolute position of pseudo-elements before and after the switchSpan, content for these pseudo elements will also be null before and after, which renders the element, but does not add content (text) */
.switchSpan::before,
.switchSpan::after {
  position: absolute;
  content: "";
}

/* The condition of the switchSpan element before checking/toggling should be as follows */
.switchSpan::before {
  top: -13px;
  left: 3px;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  z-index: 1;
  transition: 0.4s;
  background: $lightBlue;
}

/* From MDN, The adjacent sibling combinator (+) separates two selectors and matches the second element only if it immediately follows the first element, and both are children of the same parent. 
  
  If the checkbox within the switch class is checked, and a label element exists that immediately follows this checkd apply this styling before the switchSpan element */
.switch [type="checkbox"]:checked + label .switchSpan::before {
  @include transform(translateX(30px));
  top: -13px;
  height: 25px;
  width: 25px;
  border-radius: 20px;
  background: $greenBlue;
}
/* insert the following content after the switchspan */
.switch .switchSpan::after {
  width: 60px;
  height: 31px;
  border-radius: 20px;
  background: $brick;
}

/* From MDN, The adjacent sibling combinator (+) separates two selectors and matches the second element only if it immediately follows the first element, and both are children of the same parent. 
  
  If the checkbox within the switch class is checked, and a label element exists that immediately follows this checkd box and immediately precedes the switchSpan in the after pseudo state, apply the styling */
.switch [type="checkbox"]:checked + label .switchSpan::after {
  height: 31px;
  width: 60px;
  border-radius: 20px;
  background: $yellow;
}
// Registration Screen Assignments
#registerBody {
  @extend %rowFlex;
  background-color: $greenYellow;
  min-width: 100vw;
}

#registerForm {
  @extend %columnFlex;
  min-height: $bodyHeight;
}

.registerSections {
  @extend %columnFlex;
  width: 85vw;
  max-width: 250px;
  max-height: 200px;
  margin: 10px 0px 10px 0px;
}

#backToLoginLink {
  color: $yellow;
}

@media (min-width: $iPadWidth) {
  .registerSectionText {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    color: black;
  }
  .registerWelcomeText {
    color: black;
    letter-spacing: 0.3pt;
    line-height: 20pt;
    width: 400px;
    border-radius: $corners;
    box-shadow: $boxShadow;
    padding: $boxPadding;
    box-sizing: border-box;
    background-color: $greenBlue;
    margin-left: 40px;
  }
}

@media (max-width: $iPadWidthL1) {
  .registerSectionText {
    display: none;
  }
  .registerWelcomeText {
    display: none;
  }
}

/* Registration Screen Graphic */
#loaderBox {
  position: absolute;
  top: 0px;
  width: 100vw;
  height: 101vh;
  background-color: $greenBlue;
}

.svgContainer {
  width: 70vw;
  height: auto;
  max-width: 700px;
}

.loaderText {
  position: relative;
  text-align: center;
  font-weight: normal;
  font-size: 18px;
  color: $yellow;
  max-width: 700px;
  width: 80vw;
}

#cloud path,
#sun path {
  stroke: $yellow;
  stroke-width: 0.25;
  fill: $yellow;
}

#cloud path {
  fill: $greenBlue;
}

.rain {
  position: absolute;
  bottom: 20vh;
  left: 20vw;
  width: 60vw;
  height: 20vh;
}

.drop {
  opacity: 1;
  fill: $yellow;
  display: block;
  float: left;
  margin-left: 4vw;
  border-radius: 0px 0px 6px 6px;
  width: 1vw;
  height: 1vh;

  animation-name: drop;
  animation-duration: 350ms;
  animation-iteration-count: infinite;
}

.drop:nth-child(1) {
  animation-delay: -130ms;
}

.drop:nth-child(2) {
  animation-delay: -240ms;
}

.drop:nth-child(3) {
  animation-delay: -390ms;
}

.drop:nth-child(4) {
  animation-delay: -525ms;
}

.drop:nth-child(5) {
  animation-delay: -640ms;
}

.drop:nth-child(6) {
  animation-delay: -790ms;
}

.drop:nth-child(7) {
  animation-delay: -900ms;
}

.drop:nth-child(8) {
  animation-delay: -1050ms;
}

.drop:nth-child(9) {
  animation-delay: -1130ms;
}

.drop:nth-child(10) {
  animation-delay: -1300ms;
}

@keyframes drop {
  50% {
    height: 45px;
    opacity: 0;
  }

  51% {
    opacity: 0;
  }

  100% {
    height: 1px;
    opacity: 0;
  }
}

// My account assignments

#myAccountBkgd {
  min-height: 100vh;
  min-width: 100vw;
  position: relative;
  @extend %columnFlex;
  @extend %yellow-GreenBox;
}

.myAccountForm {
  min-height: $bodyHeight;
}

#nameEmailPassword,
#address,
#startHardiness {
  @extend %columnFlex;
}

.editBoxes {
  @extend %columnFlex;
  @extend %blue-greenBox;
  padding: $boxPadding;
  margin: 0px 0px 0px 0px;
  max-width: 250px;
  min-width: 250px;
}

.disabledTheme {
  background-color: transparent;
  text-align: center;
  color: $yellow;
  font-size: 20pt;
  width: 220px;
}

@media (min-width: $iPadWidth) {
  #myAccountHeader {
    color: black;
    font-size: 30pt;
  }
  .myAccountForm {
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }

  #nameEmailPassword {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  #nameEmailPassword,
  #address,
  #startHardiness {
    margin: 50px;
  }

  .accountPageText {
    display: inline-block;
  }
}

@media (max-width: $iPadWidthL1) {
  #myAccountHeader {
    display: none;
  }
  .myAccountForm {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  #nameEmailPassword,
  #address {
    margin: 0px;
  }

  .accountPageText {
    display: none;
  }
}

// Footer Assignemnts
footer {
  width: 100vw;
  height: $hFHeight;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: $greenYellow;
}

#donationLink {
  color: black;
}

// Stripe/Donation Assignments

#donationBox {
  @extend %columnFlex;
  height: $bodyHeight;
  max-width: 450px;
}

#donationInput {
  @extend %wrapFlex;
}

// Weed Search Page
#weedSearchBody {
  min-height: 100vh;
  width: 100vw;
  background-color: $greenYellow;
  @include fitContent(height);
  @extend %wrapFlex;
}

#searchResultsBox {
  min-height: 80vh;
  margin-top: 80px;
  @extend %wrapFlex;
}

@media (min-width: $iPadWidth) {
  #weedSearchForm {
    display: inline-flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: 6vh;
    width: 100vw;
  }
}
@media (max-width: $iPadWidthL1) {
  #weedSearchForm {
    display: inline-flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    display: flex;
    background-color: $greenYellow;
    width: 100vw;
    height: 5vh;
  }
}

// Thumbnail

.searchFigures,
.searchLinks {
  @extend %blue-greenBox;
  @extend %columnFlex;
  width: 225px;
  height: 350px;
  margin: 5px;
}

.searchImages {
  height: 250px;
  width: 200px;
  object-fit: cover;
}

// Weed details Weedpage.js

#weedDescriptionBox {
  @extend %columnFlex;
}

#manageDescLegend {
  color: black;
}

#descImage {
  width: 100vw;
}

// NOAA Hangup Page

#NOAAHangupBody {
  @extend %columnFlex;
  background-color: $greenYellow;
  min-width: 100vw;
  min-height: 100vh;
}

#growingParamsUpdate {
  @extend %columnFlex;
}

#NOAAHangupForm {
  @extend %columnFlex;
  @extend %blue-greenBox;
}
