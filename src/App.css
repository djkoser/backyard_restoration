/* Timeline */
.d3Container{
  width: 90vw;
  height: 90vh; 
}
.timelineAxis{
  color: #FFCC33; 
}

/* Registration Screen Graphic */
.registrationLoader {
  width: 100vw;
  height: 100vh;
}
#cloud path, #sun path {
  stroke: #FFCC33;
  stroke-width: 0.25;
  fill: #FFCC33;
}

#cloud path {
  fill: #297373;
}

.rain {
  position: absolute;
  bottom: 20vh;
  left: 20vw;
  width: 60vw;
  height: 20vh;
}

.drop {
  opacity: 1;
  fill:  #FFCC33;
  display: block;
  float: left;
  margin-left: 4vw;
  border-radius: 0px 0px 6px 6px;
  width: 1vw;
  height: 1vh;
  
  animation-name: drop;
  animation-duration: 350ms;
  animation-iteration-count: infinite;
}

.drop:nth-child(1) {
  animation-delay: -130ms;
}

.drop:nth-child(2) {
  animation-delay: -240ms;
}

.drop:nth-child(3) {
  animation-delay: -390ms;
}

.drop:nth-child(4) {
  animation-delay: -525ms;
}

.drop:nth-child(5) {
  animation-delay: -640ms;
}

.drop:nth-child(6) {
  animation-delay: -790ms;
}

.drop:nth-child(7) {
  animation-delay: -900ms;
}

.drop:nth-child(8) {
  animation-delay: -1050ms;
}

.drop:nth-child(9) {
  animation-delay: -1130ms;
}

.drop:nth-child(10) {
  animation-delay: -1300ms;
}


@keyframes drop {
  50% {
    height: 45px;
    opacity: 0;
  }

  51% {
    opacity: 0;
  }

  100% {
    height: 1px;
    opacity: 0;
  }
}

.loaderText {
	font-family: Raleway;
	text-align: center;
	margin-left: -43px;
	font-weight: normal;
	margin-top: 20px;
	font-size: 20px;
	color: #FFCC33;
	width: 100vw;
}

/* Toggle Switches */

  [type="checkbox"] {
    opacity: 0;
  }

  /* label containing two span elements will be flex box configured for equal space between elements */
  .swtich label {
    display:flex; 
    align-items: center; 
    justify-content: space-between;
  }
  /* The .switchSpan element will be positioned relatively with all transitions occuring within 0.3s  */
  .switchSpan {
    position: relative;
    transition: all 0.3s;
  }
   /* Absolute position before and after checking the checkbox, content for this pseudo element will also be null before and after, which renders the element, but does not add content */
  .switchSpan::before,
  .switchSpan::after {
    position: absolute;
    content: "";
  }
   
  /* The condition of the switchSpan element before checking/toggling should be as follows */
  .switchSpan::before {
    top: 1px;
    left: 3px;
    width: 25px;
    height: 25px;
    border-radius: 50%;
    z-index: 1;
    transition: .4s;
    background: #C3DFE0
  }
   
  /* From MDN, The adjacent sibling combinator (+) separates two selectors and matches the second element only if it immediately follows the first element, and both are children of the same parent. 
  
  If the checkbox within the switch class is checked, and a label element exists that immediately follows this checkd box and immediately precedes the switchSpan in the "before" pseudo-state, apply the styling */
  .switch [type="checkbox"]:checked + label .switchSpan::before {
    transform: translateX(30px);
    height: 25px;
    width: 25px;
    border-radius: 20px; 
    background:#297373;
  }
  /* The switchSpan::after state is defined as follows */
  .switch .switchSpan::after {
    width: 60px;
    height: 31px;
    border-radius: 20px; 
    background: #D77A61;

  }
 
  /* From MDN, The adjacent sibling combinator (+) separates two selectors and matches the second element only if it immediately follows the first element, and both are children of the same parent. 
  
  If the checkbox within the switch class is checked, and a label element exists that immediately follows this checkd box and immediately precedes the switchSpan in the after pseudo state, apply the styling */
  .switch [type="checkbox"]:checked + label .switchSpan::after {
    height: 31px;
    width: 60px;
    border-radius: 20px; 
    background: #FFCC33;
  }