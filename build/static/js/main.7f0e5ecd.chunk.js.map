{"version":3,"sources":["components/Footer.js","components/Nav.js","components/Timeline.js","redux/mgmtMethodReducer.js","components/SwitchMaker.js","components/DashboardDropdowns.js","components/Dashboard.js","redux/userInfoReducer.js","components/Login.js","components/WeatherLoader.js","components/MyAccount.js","components/Register.js","components/WeedPage.js","components/Thumbnail.js","components/WeedSearch.js","components/ResetPassword.js","components/RequestPasswordReset.js","components/StripeThankYou.js","components/Stripe.js","routes.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Footer","id","to","withRouter","props","invertColors","useState","openClose","setOpenClose","className","onClick","axios","delete","then","res","history","push","catch","err","console","log","currentDate","yrEndDate","yrStartDate","yr2ms","msBetweenGDD35","notGDD35ms","GDD35Prop","notGDD35Prop","width","height","first_gdd35","last_gdd35","margin","userMethods","avgSDateToMs","dateString","output","Date","setDate","substring","zIndexedMonth","Number","parseInt","setMonth","getTime","colors","incr","length","i","d3","colorGenerator","d3Container","map","el","common_name","name","description","useRef","getFullYear","left","right","useEffect","current","attr","append","bottom","call","xAxis","selectAll","style","text","timelineUpdater","gSelect","data","enter","d","rSelect","visibility","january","february","march","april","may","june","july","august","september","october","november","december","top","ind","j","getAttribute","xPosVal","parentElement","exit","remove","domain","range","ref","preserveAspectRatio","viewBox","initialState","loading","failed","GET_METHODS","TOGGLE_METHOD","SwitchMaker","dispatch","useDispatch","useSelector","state","mgmtMethodReducer","weedMethod","checked","reduce","acc","method_id","transform","type","onChange","methodID","methods","put","payload","toggleMethod","htmlFor","DashboardDropdowns","weedOptions","setWeedOptions","switches","setSwitches","getWeedsByVegType","vegType","get","value","weed_id","e","target","disabled","Dashboard","hardiness_zone","userInfoReducer","growing_season_length","user_id","email","first_name","last_name","street","city","zipcode","ADD_RETRIEVED_INFO","addRetrievedInfo","retrievedInfo","Login","setEmail","password","setPassword","login","post","getMethods","toast","error","placeholder","pathname","preventDefault","WeatherLoader","display","justifyContent","alignItems","flexDirection","x","y","transform-origin","attributeName","begin","dur","from","repeatCount","fill","version","xmlns","MyAccount","emailRedux","firstNameRedux","lastNameRedux","streetRedux","cityRedux","stateRedux","zipcodeRedux","firstName","setFirstName","lastName","setLastName","setStreet","setCity","setState","setZipcode","editToggleName","setEditToggleName","editToggleEmail","setEditToggleEmail","editTogglePassword","setEditTogglePassword","editToggleAddress","setEditToggleAddress","setLoading","toggleEdit","success","setTimeout","Register","onSubmit","a","createNewUser","WeedPage","location","src","setSrc","commonName","setCommonName","botanicalName","setBotanicalName","annualPerennialBiennial","setAnnualPerennialBiennial","setVegType","setDescription","mgmtOptions","setMgmtOptions","getWeedDetails","botanical_name","annual_perennial_biennial","veg_type","alt","Thumbnail","weedInfo","WeedSearch","searchText","setSearchText","weedList","setWeedList","weedType","match","params","searchResults","encodeURI","searchWeedsByKeyword","ResetPassword","failureMessage","setFailureMessage","token","newPassword","RequestPasswordReset","successMessage","setSuccessMessage","StripeThankYou","stripePromise","loadStripe","process","Stripe","donationAmount","setDonationAmount","toPaymentPage","parseFloat","stripe","toString","redirectToCheckout","sessionId","warn","onFocus","onBlur","role","exact","path","component","App","routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","GET_USER_INFO","createStore","composeWithDevTools","applyMiddleware","promiseMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7f0e5ecd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <footer>\r\n      <Link id=\"donationLink\" to='/donation'>Donate</Link>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Nav = (props) => {\r\n  const { invertColors } = props;\r\n  const [openClose, setOpenClose] = useState(false)\r\n  const logout = () => {\r\n    axios.delete('/api/logout')\r\n      .then(res => {\r\n        props.history.push('/')\r\n      })\r\n      .catch(err => { console.log(err) })\r\n  }\r\n  return (\r\n    <nav>\r\n      <div className={`linkBox ${openClose ? \"linkBoxOpened\" : \"linkBoxClosed\"}`} >\r\n        <Link to='/dash'> <strong>Dashboard</strong> </Link>\r\n        <Link to='/account'><strong>My Account</strong></Link>\r\n        <Link to='/search/f' ><strong>Forbs</strong></Link>\r\n        <Link to='/search/w' ><strong>Woody Species</strong></Link>\r\n        <Link to='/search/g' ><strong>Graminoids</strong></Link>\r\n        <span className=\"logoutLink\" onClick={() => logout()}><strong>Logout</strong></span>\r\n      </div>\r\n      <div className=\"hamburger\" onClick={() => setOpenClose(!openClose)}>\r\n        <div className={`${invertColors ? \"invertColors\" : \"hamburgerPatties\"} `}></div>\r\n        <div className={`${invertColors ? \"invertColors\" : \"hamburgerPatties\"} `}></div>\r\n        <div className={`${invertColors ? \"invertColors\" : \"hamburgerPatties\"} `}></div>\r\n      </div>\r\n    </nav >\r\n  )\r\n}\r\nexport default withRouter(Nav)","import React, { useRef, useEffect, useCallback } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// @ts-ignore\r\nimport * as d3 from 'd3';\r\n\r\n\r\n// From store userMethods[], gSeasonLength, firstGDD35\r\n\r\nconst Timeline = (props) => {\r\n\r\n  // Create chart viewbox width and height variables\r\n  const { width, height, first_gdd35, last_gdd35, margin, userMethods } = props;\r\n  // @ts-ignore\r\n\r\n  const avgSDateToMs = (dateString) => {\r\n    let output = new Date()\r\n    output.setDate(dateString.substring(3, 5))\r\n    const zIndexedMonth = Number.parseInt(dateString.substring(0, 2))\r\n    output.setMonth(zIndexedMonth)\r\n    return output.getTime()\r\n  }\r\n\r\n  const colorGenerator = () => {\r\n    let output = []\r\n    let incr = 1 / userMethods.length\r\n\r\n    for (let i = (1 / userMethods.length); i < 1; i += incr) {\r\n      output.push(d3.interpolateTurbo(i))\r\n    }\r\n    return output\r\n  }\r\n  var colors = colorGenerator()\r\n\r\n  const xPosVal = (ind, j) => {\r\n    // xPosition is the sum of the previous elements' widths\r\n    let output = margin.left;\r\n    for (let i = 0; i < ind; i++) {\r\n      output += Number.parseInt(j[i].getAttribute('width'))\r\n    }\r\n    return output;\r\n  }\r\n\r\n  // function to store management method text as legend descriptions\r\n  const extractText = () => {\r\n    return userMethods.map(el => `Weed: ${el.common_name}: ${el.name} - ${el.description}`)\r\n  }\r\n\r\n  const legendText = extractText()\r\n\r\n  // Bind D3 data to svg reference object, \r\n\r\n  let d3Container = useRef()\r\n  // initialize empty reference object for the d3Container -> The reference object has persistent  state, it will be assigned to SVG element manipulated by D3 in return\r\n\r\n  let currentDate;\r\n  let yrEndDate;\r\n  let yrStartDate;\r\n  let yr2ms;\r\n  let msBetweenGDD35;\r\n  let notGDD35ms;\r\n  let GDD35Prop;\r\n  let notGDD35Prop;\r\n\r\n  if (first_gdd35 && last_gdd35) {\r\n    // Calculates a year as January 1st through December 31st, this will the be axis display range\r\n    currentDate = new Date()\r\n    yrEndDate = new Date(currentDate.getFullYear(), 11, 31)\r\n    yrStartDate = new Date(currentDate.getFullYear(), 0, 1)\r\n    // Needed in order to calculate the bar width for certain months which is the  proportion of the year that is within the user's GDD35 growing window \r\n    yr2ms = yrEndDate.getTime() - yrStartDate.getTime()\r\n    msBetweenGDD35 = avgSDateToMs(last_gdd35) - avgSDateToMs(first_gdd35);\r\n    notGDD35ms = yr2ms - msBetweenGDD35;\r\n    // The proportion of the year in which GDD35, divided by 6 to yield the fraction of this fraction that one month spans between hypothetical May through October multiplied by the viewbox width minus chart margins\r\n    GDD35Prop = ((msBetweenGDD35 / yr2ms) / 6) * (width - margin.left - margin.right)\r\n    // The proportion of the year in which not GDD35, divided by 6 to yield the fraction of this fraction that one month spans between hypothetical November through April multipleid by the viewbox width minus chart margins\r\n    notGDD35Prop = ((notGDD35ms / yr2ms) / 6) * (width - margin.left - margin.right);\r\n\r\n    // Assign height and width values, border and add axis\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    // Associate reference object with SVG varable to be manipulated by D3\r\n    const svg = d3.select(d3Container.current)\r\n      .attr(\"class\", \"timelineSVG\")\r\n\r\n      // Add Axis\r\n      .append('g')\r\n      // move the g element that will host the x axis to the bottom of the chart\r\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n      .attr(\"class\", \"timelineAxis\")\r\n      .call(d3.axisBottom(xAxis))\r\n      // Select the xAxis Text and rotate labels for readibility. \r\n      .selectAll(\"text\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .attr(\"dx\", \"-.8em\")\r\n      .attr(\"dy\", \".15em\")\r\n      .attr(\"transform\", \"rotate(-65)\")\r\n      .append('g')\r\n      .attr(\"transform\", `translate(200,275)`)\r\n      .attr(\"height\", \"25\")\r\n      .attr(\"width\", \"50\")\r\n      .append('text')\r\n      .attr(\"font-size\", \"14\")\r\n      .attr(\"font-family\", \"raleway\")\r\n      .text('Month')\r\n  }, [])\r\n\r\n  const timelineUpdater = () => {\r\n\r\n    // Group chart update tasks that will be contingent upon data changes to a different useEffect that will re-render on change.\r\n    const svg = d3.select(d3Container.current)\r\n    // Create new g elements within the SVG element,  one for each piece of data given by userMethods from store\r\n    const gSelect = svg\r\n      .selectAll('g')\r\n      .data(userMethods)\r\n      .enter()\r\n      .append('g')\r\n      .attr(\"y\", (d, i) => `${((height - margin.bottom) / userMethods.length) * i}`)\r\n      .attr(\"fill\", (d, i) => colors[i])\r\n\r\n    // Create new rect elements within g elements, one for each management timeframe\r\n    const rSelect = gSelect\r\n      .selectAll('rect')\r\n      .data((d) =>\r\n        [{ visibility: d.january, width: notGDD35Prop },\r\n        { visibility: d.february, width: notGDD35Prop },\r\n        { visibility: d.march, width: notGDD35Prop },\r\n        { visibility: d.april, width: notGDD35Prop },\r\n        { visibility: d.may, width: GDD35Prop },\r\n        { visibility: d.june, width: GDD35Prop },\r\n        { visibility: d.july, width: GDD35Prop },\r\n        { visibility: d.august, width: GDD35Prop },\r\n        { visibility: d.september, width: GDD35Prop },\r\n        { visibility: d.october, width: GDD35Prop },\r\n        { visibility: d.november, width: notGDD35Prop },\r\n        { visibility: d.december, width: notGDD35Prop }], d => d)\r\n\r\n    rSelect\r\n      .enter()\r\n      .append('rect')\r\n      .attr(\"width\", (d) => d.width)\r\n      .attr(\"height\", (d) => userMethods.length > 6 ? `${(250 - margin.bottom - margin.top - 50) / userMethods.length}` : \"25\")\r\n      .attr(\"x\", (d, ind, j) => xPosVal(ind, j))\r\n      .attr(\"y\", (d, i, j) => j[i].parentElement.getAttribute('y'))\r\n      .style(\"fill\", (d, i, j) => j[i].parentElement.getAttribute(\"color\"))\r\n      .attr(\"visibility\", (d) => Number.parseInt(d.visibility) ? \"visible\" : \"hidden\")\r\n\r\n    gSelect\r\n      .exit()\r\n      .remove()\r\n\r\n    rSelect\r\n      .exit()\r\n      .remove()\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    console.log(\"useEffect1\")\r\n    timelineUpdater()\r\n\r\n  }, [userMethods, d3Container.current])\r\n\r\n\r\n  // INitialize x-axis object\r\n  const xAxis = d3.scaleTime()\r\n    .domain([yrStartDate, yrEndDate])\r\n    // Rather than extending from 0 to the full width and height of the chart, the starts and ends of the ranges are moved inward by the corresponding margins.\r\n    .range([margin.left, width - margin.right])\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* associates empty reference object d3Container with the SVG element manipulated by D3 */}\r\n      <svg\r\n        ref={d3Container}\r\n        preserveAspectRatio=\"xMinYMin meet\"\r\n        viewBox={`0 0 ${width} ${height}`}\r\n      ></svg>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Timeline)","import axios from 'axios';\r\n\r\nconst initialState = {\r\n  userMethods: [],\r\n  loading: false,\r\n  failed: false\r\n};\r\n\r\nconst GET_METHODS = \"GET_METHODS\";\r\nconst TOGGLE_METHOD = \"TOGGLE_METHOD\";\r\n\r\nexport const getMethods = () => {\r\n  const methods = axios\r\n    .get(`/api/wdctrl`)\r\n    .then(res => res.data)\r\n    .catch(err => initialState.userMethods);\r\n  const action = {\r\n    type: GET_METHODS,\r\n    payload: methods\r\n  };\r\n  return action;\r\n};\r\n\r\nexport const toggleMethod = (methodID) => {\r\n  const methods = axios\r\n    .put(`/api/wdctrl/${methodID}`)\r\n    .then(res => res.data)\r\n    .catch(err => initialState.userMethods);\r\n\r\n  const action = {\r\n    type: TOGGLE_METHOD,\r\n    payload: methods\r\n  };\r\n  return action;\r\n};\r\n\r\nexport default function mgmtMethodReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_METHODS + '_PENDING':\r\n      return { ...state, ...{ failed: false, loading: true } }\r\n    case GET_METHODS + '_FULFILLED':\r\n      return { ...state, ...{ failed: false, loading: false, userMethods: action.payload } }\r\n    case GET_METHODS + '_REJECTED':\r\n      return { ...state, ...{ failed: true, loading: false } }\r\n    case TOGGLE_METHOD + '_PENDING':\r\n      return { ...state, ...{ failed: false, loading: true } }\r\n    case TOGGLE_METHOD + '_FULFILLED':\r\n      return { ...state, ...{ failed: false, loading: false, userMethods: action.payload } }\r\n    case TOGGLE_METHOD + '_REJECTED':\r\n      return { ...state, ...{ failed: true, loading: false } }\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toggleMethod } from '../redux/mgmtMethodReducer';\r\n\r\n\r\nconst SwitchMaker = (props) => {\r\n  const dispatch = useDispatch()\r\n  // Determine if weed method is in user method list and check inputs accordingly\r\n\r\n  // @ts-ignore\r\n  const userMethods = useSelector(state => state.mgmtMethodReducer.userMethods);\r\n\r\n  const { weedMethod } = props;\r\n\r\n  let checked = false\r\n  if (userMethods.reduce((acc, el) => weedMethod.method_id === el.method_id ? ++acc : acc, 0)) {\r\n    checked = true\r\n  }\r\n  return (\r\n    <div className='switchBody'>\r\n      <div className='switchPara'>\r\n        <span><strong>Name: </strong>\r\n          {weedMethod.name}</span>\r\n        <div className='switchFlexBox'>\r\n          <div style={checked ? null : { transform: \"translateY(15px)\" }} className=\"switch\" >\r\n            <h5 style={checked ? null : { transform: \"translateY(-6px)\" }} className=\"switchLabel\">{checked ? \"Remove from Timeline\" : \"Add to Timeline\"}</h5>\r\n            <input type=\"checkbox\"\r\n              id={`switch${weedMethod.method_id}`}\r\n              checked={checked}\r\n              onChange={() => {\r\n                dispatch(toggleMethod(weedMethod.method_id));\r\n              }} />\r\n            <label htmlFor={`switch${weedMethod.method_id}`}>\r\n              <span className=\"switchSpan\"></span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <p className=\"treatmentDesc\">\r\n        <strong>Description: </strong>{weedMethod.description}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SwitchMaker","import React, { useState, useEffect } from 'react';\r\nimport SwitchMaker from './SwitchMaker';\r\nimport axios from 'axios';\r\n\r\nconst DashboardDropdowns = (props) => {\r\n\r\n  const [weedOptions, setWeedOptions] = useState([]);\r\n  const [switches, setSwitches] = useState([]);\r\n\r\n  // @ts-ignore\r\n  const getWeedsByVegType = (vegType) => {\r\n    axios.get(`/api/weeds?vegType=${vegType}`)\r\n      .then(res => {\r\n        setWeedOptions(res.data.map(el => (\r\n          <option key={`weed${el.weed_id}`} value={el.weed_id} >{el.common_name}</option>\r\n        )))\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const getWeedMethodsByID = (weed_id) => {\r\n    axios.get(`/api/weeds/methods/${weed_id}`)\r\n      .then(res => {\r\n        setSwitches(res.data.map(el => (<SwitchMaker key={`method${el.method_id}`} weedMethod={el} />)))\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  useEffect(() => {\r\n    getWeedsByVegType(\"f\")\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <fieldset className=\"dropdownBox\">\r\n        <h4 id=\"dropdownLegend\">Select Management Options</h4>\r\n        <select onChange={e => getWeedsByVegType(e.target.value)}>\r\n          <option value='f' >Forbs</option>\r\n          <option value='w' >Woody Species</option>\r\n          <option value='g' >Graminoids</option>\r\n        </select>\r\n        <select onChange={e => getWeedMethodsByID(e.target.value)} disabled={weedOptions.length <= 0 ? true : false} >\r\n          {weedOptions}\r\n        </select>\r\n        <br />\r\n        {switches}\r\n      </fieldset>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DashboardDropdowns","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Footer from './Footer';\r\nimport Nav from './Nav';\r\nimport Timeline from './Timeline';\r\nimport DashboardDropdowns from './DashboardDropdowns';\r\n\r\n// props from store hZone, gSeasonLength firstGDD35\r\n\r\nconst Dashboard = () => {\r\n  // @ts-ignore\r\n  const hardiness_zone = useSelector(state => state.userInfoReducer.hardiness_zone)\r\n  // @ts-ignore\r\n  const growing_season_length = useSelector(state => state.userInfoReducer.growing_season_length)\r\n  // @ts-ignore\r\n  const first_gdd35 = useSelector(state => state.userInfoReducer.first_gdd35)\r\n  // @ts-ignore\r\n  const last_gdd35 = useSelector(state => state.userInfoReducer.last_gdd35)\r\n\r\n  // @ts-ignore\r\n  const userMethods = useSelector(state => state.mgmtMethodReducer.userMethods);\r\n\r\n\r\n  const chartMargin = { top: 20, right: 0, bottom: 90, left: 40 };\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div id=\"dashboardDecoration\">\r\n        <div id=\"timelineHeaderBox\">\r\n          <section id=\"growingInfoBox\">\r\n            <h5><strong>Zone:    </strong>{hardiness_zone}</h5>\r\n            <h5><strong>Average Growing Days (GDD35):    </strong>{growing_season_length}</h5>\r\n            <h5><strong>Average Season Start Date:    </strong>{first_gdd35}</h5>\r\n            <h5><strong>Average Season End Date:    </strong>{last_gdd35}</h5>\r\n          </section>\r\n          <h2 id=\"dashHeader\"><strong>Weed Management Timeline</strong></h2>\r\n        </div>\r\n        <div id=\"d3Container\">\r\n          <Timeline height={300} width={400} first_gdd35={first_gdd35} last_gdd35={last_gdd35} userMethods={userMethods} margin={chartMargin} />\r\n        </div>\r\n      </div>\r\n      <DashboardDropdowns />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\nexport default Dashboard","import axios from 'axios';\r\n\r\nconst initialState = {\r\n  user_id: 0,\r\n  email: \"\",\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  street: \"\",\r\n  city: \"\",\r\n  state: \"\",\r\n  zipcode: \"\",\r\n  growing_season_length: 0,\r\n  first_gdd35: \"\",\r\n  hardiness_zone: \"\",\r\n  loading: false,\r\n  failed: false\r\n};\r\n\r\nconst GET_USER_INFO = \"GET_USER_INFO\";\r\nconst ADD_RETRIEVED_INFO = \"ADD_RETRIEVED_INFO\";\r\n\r\nexport const getUserInfo = () => {\r\n  const userInfo = axios\r\n    .get(`/api/user`)\r\n    .then(res => res.data)\r\n    .catch(err => initialState);\r\n  const action = {\r\n    type: GET_USER_INFO,\r\n    payload: userInfo\r\n  };\r\n  return action;\r\n};\r\n\r\nexport const addRetrievedInfo = (retrievedInfo) => {\r\n  const action = {\r\n    type: ADD_RETRIEVED_INFO,\r\n    payload: retrievedInfo\r\n  }\r\n  return action;\r\n}\r\n\r\n\r\n\r\nexport default function userInfoReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USER_INFO + \"_PENDING\":\r\n      return { ...state, ...{ loading: true, failed: false } }\r\n    case GET_USER_INFO + \"_FULFILLED\":\r\n      return { ...state, ...action.payload, ...{ loading: false, failed: false } }\r\n    case GET_USER_INFO + \"_REJECTED\":\r\n      return { ...state, ...{ loading: false, failed: true } }\r\n    case ADD_RETRIEVED_INFO:\r\n      return { ...state, ...action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { addRetrievedInfo } from '../redux/userInfoReducer';\r\nimport { getMethods } from '../redux/mgmtMethodReducer'\r\n\r\nconst Login = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  // @ts-ignore\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const login = () => {\r\n    axios.post('/api/login', { email, password })\r\n      .then((res) => {\r\n        dispatch(getMethods())\r\n        dispatch(addRetrievedInfo(res.data));\r\n        props.history.push(\"/dash\")\r\n      })\r\n      .catch((err) => {\r\n        setPassword(\"\");\r\n        setEmail(\"\");\r\n        toast.error(\"Incorrect username or password, please try again or register for an account.\")\r\n      })\r\n  };\r\n  const register = () => {\r\n    props.history.push('/register')\r\n  };\r\n  return (\r\n    <div id=\"loginComponent\">\r\n      <article id=\"loginWelcomeTextBox\">\r\n        <h1 className=\"loginWelcomeText\">Welcome to Our Community!</h1>\r\n        <h4 className=\"loginWelcomeText\"> BackyardRestoration.net is dedicated to providing you with the resources necessary to complete your own backyard ecological restorations.</h4>\r\n        <h4 className=\"loginWelcomeText\">This site is predominantly geared-toward prairie restorations in the upper midwest, but will be expanding to include other regions and ecosystems in the future.</h4>\r\n        <h4 className=\"loginWelcomeText\">Simply click the \"Register\" Button to begin or log in with your email and password.</h4>\r\n      </article>\r\n      <div id=\"loginContainer\">\r\n        <ToastContainer />\r\n        <div id=\"siteTitleBorder\">\r\n          <h1><strong>Backyard Restoration.net</strong></h1>\r\n        </div>\r\n        <form id=\"loginBox\" >\r\n          <label htmlFor=\"emailLoginInput\">Email</label>\r\n          <input id=\"emailLoginInput\" placeholder='Email' type=\"text\" value={email} onChange={e => setEmail(e.target.value)}></input>\r\n          <label htmlFor=\"passwordLoginInput\">Password</label>\r\n          <input id=\"passwordLoginInput\" placeholder='Password' type=\"password\" value={password} onChange={e => setPassword(e.target.value)}></input>\r\n          <Link id=\"forgotPwdLink\" to={{\r\n            pathname: './requestReset',\r\n            state: {\r\n              email\r\n            }\r\n          }}><strong>Forgot Password</strong></Link>\r\n          <div className=\"buttonBox\">\r\n            <button id=\"loginButton\" onClick={(e) => {\r\n              e.preventDefault();\r\n              if (email && password) {\r\n                login();\r\n              } else {\r\n                toast.error(\"Please enter a username and password or click below to register for an account.\");\r\n              }\r\n            }}>Login</button>\r\n            <button id=\"registerButton\" onClick={(e) => {\r\n              e.preventDefault();\r\n              register();\r\n            }}>Register</button>\r\n          </div>\r\n        </form>\r\n        <h1 id=\"mobileWelcomeText\" ><strong>Welcome</strong></h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Login","import React from 'react';\r\n//  Weather-Themed Loading SVG Adapted from Tim Holman's Work as Listed on Codepen - I thought this particularly lengthy loading screen deserved a solid weather-themed loading graphic. Much time spent reconfiguring CSS to be more adapted to mobile view (retained relative positions of SVGs) by turning animation into a series of nested SVGs. Also added animateTransform element for rotation to account for coordinate system difference in SVG as opposed to CSS keyfrmames \r\nconst WeatherLoader = (props) => {\r\n  const { loading } = props;\r\n  return (\r\n    <div id=\"loaderBox\" style={loading ?\r\n      { display: \"inline-flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\" }\r\n      : { display: \"none\" }}>\r\n      <div className=\"loaderText\">\r\n        Calculating growing parameters for your location based upon 5 years of local weather data, courtesy of the National Oceanic and Atmospheric Administration (NOAA). This could take several minutes depending on their server traffic.\r\n        </div>\r\n      <svg className=\"svgContainer\" viewBox=\"0 0 620 600\" preserveAspectRatio=\"xMinYMin meet\">\r\n        <svg x=\"340\" y=\"80\" id=\"sun\" width=\"275\" viewBox=\"0 0 10 10\" preserveAspectRatio=\"xMinYMin meet\" >\r\n          <g transform-origin=\"5 5\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              begin=\"0s\"\r\n              dur=\"20s\"\r\n              type=\"rotate\"\r\n              from=\"0\"\r\n              to=\"360\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n            <path fill=\"none\" d=\"M6.942,3.876c-0.4-0.692-1.146-1.123-1.946-1.123c-0.392,0-0.779,0.104-1.121,0.301c-1.072,0.619-1.44,1.994-0.821,3.067C3.454,6.815,4.2,7.245,5,7.245c0.392,0,0.779-0.104,1.121-0.301C6.64,6.644,7.013,6.159,7.167,5.581C7.321,5,7.243,4.396,6.942,3.876z M6.88,5.505C6.745,6.007,6.423,6.427,5.973,6.688C5.676,6.858,5.34,6.948,5,6.948c-0.695,0-1.343-0.373-1.69-0.975C2.774,5.043,3.093,3.849,4.024,3.312C4.32,3.14,4.656,3.05,4.996,3.05c0.695,0,1.342,0.374,1.69,0.975C6.946,4.476,7.015,5,6.88,5.505z\"></path>\r\n            <path fill=\"none\" d=\"M8.759,2.828C8.718,2.757,8.626,2.732,8.556,2.774L7.345,3.473c-0.07,0.041-0.094,0.132-0.053,0.202C7.319,3.723,7.368,3.75,7.419,3.75c0.025,0,0.053-0.007,0.074-0.02l1.211-0.699C8.774,2.989,8.8,2.899,8.759,2.828z\"></path>\r\n            <path fill=\"none\" d=\"M1.238,7.171c0.027,0.047,0.077,0.074,0.128,0.074c0.025,0,0.051-0.008,0.074-0.02l1.211-0.699c0.071-0.041,0.095-0.133,0.054-0.203S2.574,6.228,2.503,6.269l-1.21,0.699C1.221,7.009,1.197,7.101,1.238,7.171z\"></path>\r\n            <path fill=\"none\" d=\"M6.396,2.726c0.052,0,0.102-0.026,0.13-0.075l0.349-0.605C6.915,1.976,6.89,1.885,6.819,1.844c-0.07-0.042-0.162-0.017-0.202,0.054L6.269,2.503C6.228,2.574,6.251,2.666,6.322,2.706C6.346,2.719,6.371,2.726,6.396,2.726z\"></path>\r\n            <path fill=\"none\" d=\"M3.472,7.347L3.123,7.952c-0.041,0.07-0.017,0.162,0.054,0.203C3.2,8.169,3.226,8.175,3.25,8.175c0.052,0,0.102-0.027,0.129-0.074l0.349-0.605c0.041-0.07,0.017-0.16-0.054-0.203C3.603,7.251,3.513,7.276,3.472,7.347z\"></path>\r\n            <path fill=\"none\" d=\"M3.601,2.726c0.025,0,0.051-0.007,0.074-0.02C3.746,2.666,3.77,2.574,3.729,2.503l-0.35-0.604C3.338,1.828,3.248,1.804,3.177,1.844C3.106,1.886,3.082,1.976,3.123,2.047l0.35,0.604C3.5,2.7,3.549,2.726,3.601,2.726z\"></path>\r\n            <path fill=\"none\" d=\"M6.321,7.292c-0.07,0.043-0.094,0.133-0.054,0.203l0.351,0.605c0.026,0.047,0.076,0.074,0.127,0.074c0.025,0,0.051-0.006,0.074-0.02c0.072-0.041,0.096-0.133,0.055-0.203l-0.35-0.605C6.483,7.276,6.393,7.253,6.321,7.292z\"></path>\r\n            <path fill=\"none\" d=\"M2.202,5.146c0.082,0,0.149-0.065,0.149-0.147S2.284,4.851,2.202,4.851H1.503c-0.082,0-0.148,0.066-0.148,0.148s0.066,0.147,0.148,0.147H2.202z\"></path>\r\n            <path fill=\"none\" d=\"M8.493,4.851H7.794c-0.082,0-0.148,0.066-0.148,0.148s0.066,0.147,0.148,0.147l0,0h0.699c0.082,0,0.148-0.065,0.148-0.147S8.575,4.851,8.493,4.851L8.493,4.851z\"></path>\r\n            <path fill=\"none\" d=\"M5.146,2.203V0.805c0-0.082-0.066-0.148-0.148-0.148c-0.082,0-0.148,0.066-0.148,0.148v1.398c0,0.082,0.066,0.149,0.148,0.149C5.08,2.352,5.146,2.285,5.146,2.203z\"></path>\r\n            <path fill=\"none\" d=\"M4.85,7.796v1.396c0,0.082,0.066,0.15,0.148,0.15c0.082,0,0.148-0.068,0.148-0.15V7.796c0-0.082-0.066-0.148-0.148-0.148C4.917,7.647,4.85,7.714,4.85,7.796z\"></path>\r\n            <path fill=\"none\" d=\"M2.651,3.473L1.44,2.774C1.369,2.732,1.279,2.757,1.238,2.828C1.197,2.899,1.221,2.989,1.292,3.031l1.21,0.699c0.023,0.013,0.049,0.02,0.074,0.02c0.051,0,0.101-0.026,0.129-0.075C2.747,3.604,2.722,3.514,2.651,3.473z\"></path>\r\n            <path fill=\"none\" d=\"M8.704,6.968L7.493,6.269c-0.07-0.041-0.162-0.016-0.201,0.055c-0.041,0.07-0.018,0.162,0.053,0.203l1.211,0.699c0.023,0.012,0.049,0.02,0.074,0.02c0.051,0,0.102-0.027,0.129-0.074C8.8,7.101,8.776,7.009,8.704,6.968z\"></path>\r\n          </g>\r\n        </svg>\r\n\r\n        <svg version=\"1.1\" x=\"40\" height=\"600\" id=\"cloud\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10 10\" preserveAspectRatio=\"xMinYMin meet\">\r\n          <path fill=\"none\" d=\"M8.528,5.624H8.247c-0.085,0-0.156-0.068-0.156-0.154c0-0.694-0.563-1.257-1.257-1.257c-0.098,0-0.197,0.013-0.3,0.038C6.493,4.259,6.45,4.252,6.415,4.229C6.38,4.208,6.356,4.172,6.348,4.131C6.117,3.032,5.135,2.235,4.01,2.235c-1.252,0-2.297,0.979-2.379,2.23c-0.004,0.056-0.039,0.108-0.093,0.13C1.076,4.793,0.776,5.249,0.776,5.752c0,0.693,0.564,1.257,1.257,1.257h6.495c0.383,0,0.695-0.31,0.695-0.692S8.911,5.624,8.528,5.624z\"></path>\r\n        </svg>\r\n\r\n        <svg x=\"100\" y=\"140\" width=\"500\" viewBox=\"0 0 200 1\" className=\"rain\">\r\n          <rect x=\"0\" className=\"drop\">\r\n          </rect >\r\n          <rect x=\"20\" className=\"drop\">\r\n          </rect >\r\n          <rect x=\"40\" className=\"drop\">\r\n          </rect >\r\n          <rect x=\"60\" className=\"drop\">\r\n          </rect >\r\n          <rect x=\"80\" className=\"drop\">\r\n          </rect >\r\n          <rect x=\"100\" className=\"drop\">\r\n          </rect >\r\n          <rect x=\"120\" className=\"drop\">\r\n          </rect >\r\n          <rect x=\"140\" className=\"drop\">\r\n          </rect >\r\n          <rect x=\"160\" className=\"drop\">\r\n          </rect >\r\n          <rect x=\"180\" className=\"drop\">\r\n          </rect >\r\n        </svg>\r\n      </svg>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default WeatherLoader;","// @ts-ignore\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\n// @ts-ignore\r\nimport { addRetrievedInfo } from '../redux/userInfoReducer';\r\nimport Nav from './Nav';\r\nimport Footer from './Footer';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport WeatherLoader from './WeatherLoader';\r\n\r\n// props from store user_id, email, first_name, last_name, street, city, state, zipcode, getUserInfo()\r\n\r\n// @ts-ignore\r\nconst MyAccount = (props) => {\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  // @ts-ignore\r\n  const emailRedux = useSelector(state => state.userInfoReducer.email);\r\n  // @ts-ignore\r\n  const firstNameRedux = useSelector(state => state.userInfoReducer.first_name);\r\n  // @ts-ignore\r\n  const lastNameRedux = useSelector(state => state.userInfoReducer.last_name);\r\n  // @ts-ignore\r\n  const streetRedux = useSelector(state => state.userInfoReducer.street);\r\n  // @ts-ignore\r\n  const cityRedux = useSelector(state => state.userInfoReducer.city);\r\n  // @ts-ignore\r\n  const stateRedux = useSelector(state => state.userInfoReducer.state);\r\n  // @ts-ignore\r\n  const zipcodeRedux = useSelector(state => state.userInfoReducer.zipcode);\r\n\r\n  // @ts-ignore\r\n  const [firstName, setFirstName] = useState(firstNameRedux);\r\n  // @ts-ignore\r\n  const [lastName, setLastName] = useState(lastNameRedux);\r\n  // @ts-ignore\r\n  const [email, setEmail] = useState(emailRedux);\r\n  // @ts-ignore\r\n  const [password, setPassword] = useState(\"This is a fake password\");\r\n  // @ts-ignore\r\n  const [street, setStreet] = useState(streetRedux);\r\n  // @ts-ignore\r\n  const [city, setCity] = useState(cityRedux);\r\n  // @ts-ignore\r\n  const [state, setState] = useState(stateRedux);\r\n  // @ts-ignore\r\n  const [zipcode, setZipcode] = useState(zipcodeRedux);\r\n  // @ts-ignore\r\n  const [editToggleName, setEditToggleName] = useState(true);\r\n  // @ts-ignore\r\n  const [editToggleEmail, setEditToggleEmail] = useState(true);\r\n  // @ts-ignore\r\n  const [editTogglePassword, setEditTogglePassword] = useState(true);\r\n  // @ts-ignore\r\n  const [editToggleAddress, setEditToggleAddress] = useState(true);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n\r\n  const toggleEdit = (type) => {\r\n    switch (type) {\r\n      case \"name\":\r\n        if (editToggleName) {\r\n          setEditToggleName(false);\r\n        } else {\r\n          setEditToggleName(true);\r\n          axios.put(`/api/user/name`, { first_name: firstName, last_name: lastName })\r\n            .then(res => {\r\n              dispatch(addRetrievedInfo(res.data))\r\n              const { email, first_name, last_name, street, city, state, zipcode } = res.data;\r\n              setFirstName(first_name)\r\n              setLastName(last_name)\r\n              setEmail(email)\r\n              setPassword(\"This is a fake password\")\r\n              setStreet(street)\r\n              setCity(city)\r\n              setState(state)\r\n              setZipcode(zipcode)\r\n              toast.success(\"Your name has been updated successfully.\")\r\n            })\r\n            .catch(err => toast.error(\"There was an error while attempting to change your credentials, please notify us of this problem at BackyardRestorationNet@gmail.com and we will work to find a solution as quickly as possilble.\"))\r\n        }\r\n        return\r\n      case \"email\":\r\n        if (editToggleEmail) {\r\n          setEditToggleEmail(false);\r\n        } else {\r\n          setEditToggleEmail(true);\r\n          axios.put(`/api/user/email`, { email })\r\n            .then(res => {\r\n              dispatch(addRetrievedInfo(res.data))\r\n              const { email, first_name, last_name, street, city, state, zipcode } = res.data;\r\n              setFirstName(first_name)\r\n              setLastName(last_name)\r\n              setEmail(email)\r\n              setPassword(\"This is a fake password\")\r\n              setStreet(street)\r\n              setCity(city)\r\n              setState(state)\r\n              setZipcode(zipcode)\r\n              toast.success(\"Your email has been updated successfully.\")\r\n\r\n            })\r\n            .catch(err => toast.error(\"There was an error while attempting to change your credentials, please notify us of this problem at BackyardRestorationNet@gmail.com and we will work to find a solution as quickly as possilble.\"))\r\n\r\n        }\r\n        return\r\n      case \"password\":\r\n        if (editTogglePassword) {\r\n          setEditTogglePassword(false);\r\n          setPassword(\"\")\r\n        } else {\r\n          setEditTogglePassword(true);\r\n          axios.put(`/api/user/password`, { password })\r\n            .then(res => {\r\n              dispatch(addRetrievedInfo(res.data))\r\n              const { email, first_name, last_name, street, city, state, zipcode } = res.data;\r\n              setFirstName(first_name)\r\n              setLastName(last_name)\r\n              setEmail(email)\r\n              setPassword(\"This is a fake password\")\r\n              setStreet(street)\r\n              setCity(city)\r\n              setState(state)\r\n              setZipcode(zipcode)\r\n              toast.success(\"Your password has been updated successfully.\")\r\n\r\n            })\r\n            .catch(err => toast.error(\"There was an error while attempting to change your credentials, please notify us of this problem at BackyardRestorationNet@gmail.com and we will work to find a solution as quickly as possilble.\"))\r\n\r\n        }\r\n        return\r\n      case \"address\":\r\n        if (editToggleAddress) {\r\n          setEditToggleAddress(false);\r\n        } else {\r\n          setLoading(true)\r\n          setEditToggleAddress(true);\r\n          axios.put(`/api/user/address`, { street, city, state, zipcode })\r\n            .then(res => {\r\n              setTimeout(() => {\r\n                dispatch(addRetrievedInfo(res.data));\r\n                const { email, first_name, last_name, street, city, state, zipcode } = res.data;\r\n                setFirstName(first_name);\r\n                setLastName(last_name);\r\n                setEmail(email);\r\n                setPassword(\"This is a fake password\");\r\n                setStreet(street);\r\n                setCity(city);\r\n                setState(state);\r\n                setZipcode(zipcode);\r\n                setLoading(false);\r\n                toast.success(\"Your address has been updated successfully.\");\r\n              }, 3000)\r\n            })\r\n            .catch(err => {\r\n              setLoading(false)\r\n              toast.error(\"There was an error while attempting to change your credentials, please notify us of this problem at BackyardRestorationNet@gmail.com and we will work to find a solution as quickly as possilble.\")\r\n            })\r\n        }\r\n        return\r\n      default:\r\n        break\r\n    }\r\n  };\r\n  // @ts-ignore\r\n\r\n\r\n  return (\r\n    <div id=\"myAccountBkgd\">\r\n      <Nav invertColors={true} />\r\n      <ToastContainer />\r\n      <h1 id=\"myAccountHeader\">My Account</h1>\r\n      <main className=\"myAccountForm\" style={!loading ? { display: \"inline-flex\" } : { display: \"none\" }}>\r\n        <div id=\"nameEmailPassword\">\r\n          <fieldset className=\" editBoxes\" >\r\n            <h2 className=\"accountPageText\">Name</h2>\r\n            <input className={`${editToggleName ? \"disabledTheme\" : null}`} disabled={editToggleName} type='text' value={firstName} onChange={e => { setFirstName(e.target.value) }} />\r\n            <input className={`${editToggleName ? \"disabledTheme\" : null}`} disabled={editToggleName} type='text' value={lastName} onChange={e => { setLastName(e.target.value) }} />\r\n          </fieldset>\r\n          <button onClick={() => toggleEdit(\"name\")}>{editToggleName ? \"Edit\" : \"Submit\"}</button>\r\n          <fieldset className=\"editBoxes\" >\r\n            <h2 className=\"accountPageText\">Email</h2>\r\n            <input className={`${editToggleEmail ? \"disabledTheme\" : null}`} disabled={editToggleEmail} type='text' value={email} onChange={e => { setEmail(e.target.value) }} />\r\n          </fieldset>\r\n          <button onClick={() => toggleEdit(\"email\")}>{editToggleEmail ? \"Edit\" : \"Submit\"}</button>\r\n        </div>\r\n        <div id=\"address\">\r\n          <fieldset className=\"editBoxes\" >\r\n            <h2 className=\"accountPageText\">Password</h2>\r\n            <input className={`${editTogglePassword ? \"disabledTheme\" : null}`} disabled={editTogglePassword} type='password' value={password} onChange={e => { setPassword(e.target.value) }} />\r\n          </fieldset>\r\n          <button onClick={() => toggleEdit(\"password\")}>{editTogglePassword ? \"Edit\" : \"Submit\"}</button>\r\n          <fieldset className=\"editBoxes\" >\r\n            <h2 className=\"accountPageText\">Address</h2>\r\n            <input className={`${editToggleAddress ? \"disabledTheme\" : null}`} disabled={editToggleAddress} type='text' value={street} onChange={e => { setStreet(e.target.value) }} />\r\n            <input className={`${editToggleAddress ? \"disabledTheme\" : null}`} disabled={editToggleAddress} type='text' value={city} onChange={e => { setCity(e.target.value) }} />\r\n            <input className={`${editToggleAddress ? \"disabledTheme\" : null}`} disabled={editToggleAddress} type='text' value={state} onChange={e => { setState(e.target.value) }} />\r\n            <input className={`${editToggleAddress ? \"disabledTheme\" : null}`} disabled={editToggleAddress} type='text' value={zipcode} onChange={e => { setZipcode(e.target.value) }} />\r\n          </fieldset>\r\n          <button onClick={() => toggleEdit(\"address\")}>{editToggleAddress ? \"Edit\" : \"Submit\"}</button>\r\n        </div>\r\n      </main>\r\n      <WeatherLoader loading={loading} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\nexport default MyAccount\r\n","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addRetrievedInfo } from '../redux/userInfoReducer';\r\nimport WeatherLoader from './WeatherLoader'\r\n\r\n// props from Login email, password\r\n\r\nconst Register = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [first_name, setFirstName] = useState(\"\")\r\n  const [last_name, setLastName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [street, setStreet] = useState(\"\")\r\n  const [city, setCity] = useState(\"\")\r\n  const [state, setState] = useState(\"\")\r\n  const [zipcode, setZipcode] = useState(\"\")\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const createNewUser = (e) => {\r\n    e.preventDefault()\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setStreet(\"\");\r\n    setCity(\"\");\r\n    setState(\"\");\r\n    setZipcode(\"\");\r\n    setLoading(true)\r\n    axios.post(\"/api/register\", { email, password, first_name, last_name, street, city, state, zipcode })\r\n      .then(async (res) => {\r\n        dispatch(addRetrievedInfo(res.data));\r\n        toast.success('Registration Successful! Logging you in to your new dashboard...')\r\n        // delay to push avoids strange error from NOAA Server ->  The proxy server received an invalid response from an upstream server.'The proxy server could not handle the request Reason: Error reading from remote server. Additionally, a 502 Bad Gateway  'error was encountered while trying to use an ErrorDocument. End Quote.  It is possible that the quick turnaround to push was causing some sort of timeout condition. 3 seconds allows for registration susccess message so this ends up being dual purpose. \r\n        setTimeout(() => props.history.push('./dash'), 3000);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false)\r\n        toast.error('A user with the email you provided is already present within our database. Please log in using your email and password or reset your password using the \"Forgot Password\" link.')\r\n      })\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <section id=\"registerBody\" style={loading ? { visibility: \"hidden\" } : { visibility: \"visible\" }}>\r\n        <form id=\"registerForm\" onSubmit={e => { createNewUser(e) }}>\r\n          <section className=\"registerSections\">\r\n            <h3 className=\"registerSectionText\">Name</h3>\r\n            <input placeholder=\"First Name\" type=\"text\" value={first_name} onChange={e => { setFirstName(e.target.value) }} ></input>\r\n            <input placeholder=\"Last Name\" type=\"text\" value={last_name} onChange={e => { setLastName(e.target.value) }} ></input>\r\n          </section>\r\n          <section className=\"registerSections\">\r\n            <h3 className=\"registerSectionText\">Email</h3>\r\n            <input placeholder=\"Email\" type=\"text\" value={email} onChange={e => { setEmail(e.target.value) }} ></input>\r\n          </section>\r\n          <section className=\"registerSections\">\r\n            <h3 className=\"registerSectionText\">Password</h3>\r\n            <input placeholder=\"Password\" type=\"password\" value={password} onChange={e => { setPassword(e.target.value) }}></input>\r\n          </section>\r\n          <section className=\"registerSections\">\r\n            <h3 className=\"registerSectionText\">Address</h3>\r\n            <input placeholder=\"Street\" type=\"text\" value={street} onChange={e => { setStreet(e.target.value) }} ></input>\r\n            <input placeholder=\"City\" type=\"text\" value={city} onChange={e => { setCity(e.target.value) }} ></input>\r\n            <input placeholder=\"State\" type=\"text\" value={state} onChange={e => { setState(e.target.value) }} ></input>\r\n            <input placeholder=\"Zipcode\" type=\"text\" value={zipcode} onChange={e => { setZipcode(e.target.value) }} ></input>\r\n          </section>\r\n          <button>Register</button>\r\n        </form >\r\n        <article className=\"registerWelcomeText\">\r\n          <h1 >Welcome to Our Community!</h1>\r\n          <h4 > Registering for an account with BackyardRestoration.net will provide you with access to a series of free tools designed to help you plan and complete your own backyard ecological restorations. </h4>\r\n          <h4 >Your address will be used to calculate growing parameters for your local area using historical weather data.</h4>\r\n          <h4 >If you have any privacy concerns or questions regarding the site, please contact us at BackyardRestorationNet@gmail.com.</h4>\r\n        </article>\r\n      </section>\r\n      <Link id=\"backToLoginLink\" to={'/'}>Back to Login</Link>\r\n      <WeatherLoader loading={loading} />\r\n    </>\r\n  )\r\n}\r\nexport default Register","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Nav from './Nav';\r\nimport Footer from './Footer';\r\nimport SwitchMaker from './SwitchMaker';\r\n// From Store userMethods[], getMethods(), addMethod() removeMethod()\r\n\r\nconst WeedPage = (props) => {\r\n  const { weed_id } = props.location.state\r\n\r\n  const [src, setSrc] = useState(\"\");\r\n  const [commonName, setCommonName] = useState(\"\");\r\n  const [botanicalName, setBotanicalName] = useState(\"\");\r\n  const [annualPerennialBiennial, setAnnualPerennialBiennial] = useState(\"\");\r\n  const [vegType, setVegType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [mgmtOptions, setMgmtOptions] = useState([]);\r\n\r\n  // @ts-ignore\r\n  const userMethods = useSelector(state => state.mgmtMethodReducer.userMethods);\r\n  // Creates local state to avoid lagginess and render errors caused by adding/removing methods on switch toggle\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // @ts-ignore\r\n\r\n  const getWeedDetails = async () => {\r\n    await axios.get(`/api/weeds/${weed_id}`)\r\n      .then(res => {\r\n        const { src, common_name, botanical_name, annual_perennial_biennial, veg_type, description } = res.data;\r\n        setSrc(src);\r\n        setCommonName(common_name);\r\n        setBotanicalName(botanical_name);\r\n        setAnnualPerennialBiennial(annual_perennial_biennial);\r\n        setVegType(veg_type);\r\n        setDescription(description)\r\n      })\r\n      .catch(err => console.log(err))\r\n    await axios.get(`/api/weeds/methods/${weed_id}`)\r\n      .then(res => {\r\n        setMgmtOptions(res.data);\r\n      })\r\n      .catch(err => { console.log(err) })\r\n    setLoading(false)\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => {\r\n    getWeedDetails()\r\n  }, [])\r\n\r\n\r\n  const switches = mgmtOptions.map(el => (<SwitchMaker key={`method${el.method_id}`} userMethods={userMethods} weedMethod={el} />))\r\n  const output = (\r\n    <>\r\n      <Nav />\r\n      <section className=\"weedDescriptionBox\">\r\n        <h2>{commonName}</h2>\r\n        <h2><em>{botanicalName}</em></h2>\r\n        <h3>{annualPerennialBiennial === \"a\" ? \"Annual\" : annualPerennialBiennial === \"p\" ? \"Perennial\" : \"Biennial\"} {vegType === \"f\" ? \"Forb\" : vegType === \"g\" ? \"Graminoid\" : \"Woody\"}</h3>\r\n        <img id=\"descImage\" alt={`${botanicalName} commonly known as ${commonName}`} src={src} />\r\n        <section>\r\n          <h4>Description</h4>\r\n          <article>\r\n            <h4 >{description}</h4>\r\n          </article>\r\n        </section>\r\n      </section>\r\n      <fieldset className=\"dropdownBox\">\r\n        <h3 id=\"manageDescLegend\">Management Options</h3>\r\n        <br />\r\n        <div>\r\n          {switches}\r\n        </div>\r\n      </fieldset>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      { loading ? <></> : output}\r\n      <Footer />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default WeedPage","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// props commonName, botanicalName from WeedSearch\r\nconst Thumbnail = (props) => {\r\n  const { weed_id, common_name, botanical_name, src } = props.weedInfo\r\n  return (\r\n    <figure className='searchFigures'>\r\n      <Link className='searchLinks' to={{\r\n        pathname: `/weed/${weed_id}`,\r\n        state: {\r\n          weed_id\r\n        }\r\n      }}>\r\n        <img className='searchImages' alt={`${botanical_name} commonly known as ${common_name}`} src={src} />\r\n        <figcaption>\r\n          <br />\r\n          <strong>Botanical Name: </strong>\r\n          <br />\r\n          <em>{`${botanical_name}`}</em>\r\n          <br />\r\n          <br />\r\n          <strong>Common Name: </strong>\r\n          <br />\r\n          {`${common_name}`}\r\n        </figcaption>\r\n\r\n      </Link>\r\n    </figure >\r\n  )\r\n}\r\nexport default Thumbnail","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Footer from './Footer';\r\nimport Nav from './Nav';\r\nimport Thumbnail from './Thumbnail';\r\n\r\n\r\n\r\n// props vegType \r\nconst WeedSearch = (props) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [weedList, setWeedList] = useState([]);\r\n  const weedType = props.match.params.vegType\r\n\r\n  const getWeedsByType = () => {\r\n    axios.get(`/api/weeds?vegType=${weedType}`)\r\n      .then(res => setWeedList(res.data))\r\n      .catch(err => console.log(err))\r\n  };\r\n  const searchWeedsByKeyword = (e) => {\r\n    e.preventDefault()\r\n    axios.get(`/api/weeds?vegType=${weedType}&keyword=${encodeURI(searchText)}`)\r\n      .then(res => {\r\n        setSearchText(\"\")\r\n        setWeedList(res.data)\r\n      })\r\n      .catch(err => console.log(err))\r\n  };\r\n  useEffect(() => {\r\n    getWeedsByType();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [weedType])\r\n\r\n  const searchResults = weedList.map(el => <Thumbnail key={el.weed_id} weedInfo={el} />)\r\n\r\n  return (\r\n    <main id=\"weedSearchBody\">\r\n      <Nav invertColors={true} />\r\n      <form id=\"weedSearchForm\" onSubmit={(e) => searchWeedsByKeyword(e)}>\r\n        <input type=\"text\" placeholder=\"Weed Name\" value={searchText} onChange={e => setSearchText(e.target.value)}></input>\r\n        <button>Search</button>\r\n        <button>Show All {weedType === \"f\" ? \"Forb\" : weedType === \"g\" ? \"Graminoid\" : \"Woody\"} Species</button>\r\n      </form>\r\n      <div id=\"searchResultsBox\">\r\n        {searchResults}\r\n      </div>\r\n      <Footer />\r\n    </main>\r\n  )\r\n}\r\nexport default WeedSearch","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n// @ts-ignore\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ResetPassword = (props) => {\r\n\r\n  // @ts-ignore\r\n  const [failureMessage, setFailureMessage] = useState({ visibility: \"hidden\" })\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n\r\n  const submitChange = (event) => {\r\n    event.preventDefault()\r\n\r\n    axios.put(`/api/pwdRS/${props.match.params.token}`, { newPassword: password })\r\n      // @ts-ignore\r\n      .then(res => {\r\n        setPassword(\"\")\r\n        toast.success(\"Password Reset Successful! Logging you in...\")\r\n        setFailureMessage({ visibility: \"hidden\" })\r\n        setTimeout(() => {\r\n          props.history.push('/dash')\r\n        }, 2000)\r\n      })\r\n      // @ts-ignore\r\n      .catch(err => {\r\n        setPassword(\"\")\r\n        toast.error('Your password reset request has expired. Please try again using the \"Forgot Password\" link on our login page.')\r\n        setFailureMessage({ visibility: \"visible\" })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <main id=\"submitResetBody\">\r\n      <ToastContainer />\r\n      <h1>Change Password</h1>\r\n      <h4>Please Enter a New Password for Your Account Below</h4>\r\n      <form id=\"submitResetForm\" onSubmit={e => submitChange(e)}>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          onChange={e => setPassword(e.target.value)}\r\n          id='resetPwdPasswordInput'\r\n        ></input>\r\n        <button>Change Password</button>\r\n      </form>\r\n      <article\r\n        // @ts-ignore\r\n        style={failureMessage}>\r\n        <h4 >'Your password reset request has expired. Please try again using the \"Forgot Password\" link on our login page.'</h4>\r\n        <Link to={\"/\"}>Back to Login</Link>\r\n      </article>\r\n    </main>\r\n  )\r\n}\r\n\r\n// @ts-ignore\r\nexport default ResetPassword","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RequestPasswordReset = (props) => {\r\n  const [email, setEmail] = useState(props.location.state.email)\r\n  const [successMessage, setSuccessMessage] = useState({ visibility: \"hidden\" })\r\n  const [failureMessage, setFailureMessage] = useState({ visibility: \"hidden\" })\r\n\r\n  const submitRequest = (event) => {\r\n    event.preventDefault()\r\n    axios.put(\"/api/pwdResetReq\", { email })\r\n      // @ts-ignore\r\n      .then(res => {\r\n        setEmail(\"\");\r\n        toast.success('Password Reset Request Submitted Successfully')\r\n        setSuccessMessage({ visibility: \"visible\" })\r\n        setFailureMessage({ visibility: \"hidden\" })\r\n      })\r\n      // @ts-ignore\r\n      .catch(err => {\r\n        setEmail(\"\");\r\n        toast.error('Password Reset Request Failed.')\r\n        setSuccessMessage({ visibility: \"hidden\" })\r\n        setFailureMessage({ visibility: \"visible\" })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div id=\"resetReqBox\">\r\n      <ToastContainer />\r\n      <h1 id=\"resetTitle\"><strong>Password Reset</strong></h1>\r\n      <h3>Please Enter the Email you Used to Register with BackyardRestoration.net</h3>\r\n      <form id=\"resetRequestForm\" onSubmit={e => submitRequest(e)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your Email\"\r\n          onChange={e => setEmail(e.target.value)}\r\n          id='resetPwdEmailInput'\r\n          value={email}\r\n        ></input>\r\n        <button id=\"resetReqButton\">Request Reset</button>\r\n      </form>\r\n      <Link to={\"/\"}>Back to Login</Link>\r\n      <article\r\n        // @ts-ignore\r\n        style={successMessage}>\r\n        <h4> Your password reset request has been submitted successfully! Please check your email for a link to reset your password. (These often end up in SPAM, so please check there if you're having trouble finding it).</h4>\r\n\r\n      </article>\r\n      <article\r\n        // @ts-ignore\r\n        style={failureMessage}>\r\n        <h4> We did not find an account under the email address provided. Please try again or register for a new account using the \"Register\" button on our login page.</h4>\r\n      </article>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RequestPasswordReset","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StripeThankYou = (props) => {\r\n  return (\r\n    <>\r\n      <h1>Thank You for Your Donation!</h1>\r\n      <Link to=\"/dash\">To Dashboard</Link>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default StripeThankYou","import React, { useState } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from './Nav';\r\n\r\n\r\nconst { REACT_APP_STRIPE_PUBLISHABLE_KEY } = process.env;\r\n\r\nconst stripePromise = loadStripe(REACT_APP_STRIPE_PUBLISHABLE_KEY);\r\n\r\nconst Stripe = () => {\r\n  const [donationAmount, setDonationAmount] = useState(\"$0.00\");\r\n\r\n  const toPaymentPage = async () => {\r\n    if (donationAmount.match(/\\d*.\\d{2}/) && donationAmount.match(/\\d*.\\d{2}/)[0] === donationAmount && Number.parseFloat(donationAmount) >= 1) {\r\n      const stripe = await stripePromise;\r\n      axios.post('/api/donate', { donationAmount: (Number.parseFloat(donationAmount) * 100).toString() })\r\n        .then(async res => {\r\n          await stripe.redirectToCheckout({\r\n            sessionId: res.data.id\r\n          })\r\n        })\r\n        .catch(() => toast.error(\"Unfortunately, your donation did not process successfully. Please inform us of this issue by contacting us at BackyardRestorationNet@gmail.com, and we will work to resolve it as quickly as possible. Thank you for your attempted donation!\"))\r\n    } else {\r\n      toast.warn('Please enter a value greater than 1 dollar in the format \"0.00\". Thank you!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <ToastContainer />\r\n      <div id=\"donationBox\">\r\n        <h2>Thank you for your donation!</h2>\r\n        <h4>Please enter your preferred donation amount in the box provided using the format \"0.00\". Due to service charges, we are only accepting donations greater than $1.00.</h4>\r\n        <div id=\"donationInput\">\r\n          <input value={donationAmount} onChange={(e) => setDonationAmount(e.target.value)} type='text' id='donationInput' onFocus={() => setDonationAmount(\"\")} onBlur={() => setTimeout(() => setDonationAmount(\"$0.00\"), 250)} />\r\n          <button role=\"link\" onClick={() => toPaymentPage()} >\r\n            Proceed to Payment\r\n        </button >\r\n        </div>\r\n      </div>\r\n      <Link to=\"/dash\">Back to Dashboard</Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Stripe","import { Switch, Route } from \"react-router-dom\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Login from \"./components/Login\";\r\nimport MyAccount from \"./components/MyAccount\";\r\nimport Register from \"./components/Register\";\r\nimport WeedPage from \"./components/WeedPage\";\r\nimport WeedSearch from \"./components/WeedSearch\";\r\nimport ResetPassword from \"./components/ResetPassword\";\r\nimport RequestPasswordReset from \"./components/RequestPasswordReset\";\r\nimport StripeThankYou from \"./components/StripeThankYou\";\r\nimport Stripe from \"./components/Stripe\";\r\n\r\nexport default (\r\n  <Switch>\r\n    <Route exact path='/' component={Login} />\r\n    <Route path='/requestReset' component={RequestPasswordReset} />\r\n    <Route path='/resetPassword/:token' component={ResetPassword} />\r\n    <Route path='/dash' component={Dashboard} />\r\n    <Route path='/account' component={MyAccount} />\r\n    <Route path='/register' component={Register} />\r\n    <Route path='/weed/:id' component={WeedPage} />\r\n    <Route path='/search/:vegType' component={WeedSearch} />\r\n    <Route path='/donation/success' component={StripeThankYou} />\r\n    <Route path='/donation' component={Stripe} />\r\n  </Switch>\r\n)","import React from 'react';\r\nimport './App.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport routes from './routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {routes}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport promiseMiddleware from 'redux-promise-middleware';\r\nimport mgmtMethodReducer from './mgmtMethodReducer';\r\nimport userInfoReducer from './userInfoReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  mgmtMethodReducer,\r\n  userInfoReducer\r\n})\r\n\r\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(promiseMiddleware)))\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}