# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type Weed @model {
  weedId: ID! @primaryKey
  vegetationType: String!
    @index(name: "byVegetationType", queryField: "weedByVegetationType")
  commonName: String!
    @index(name: "byCommonName", queryField: "weedByCommonName")
  botanicalName: String!
    @index(name: "byBotanicalName", queryField: "weedByBotanicalName")
  annualPerennialBiennial: String!
  description: String!
  managementMethods: [ManagementMethod] @hasMany
  src: String!
}

type UserInfo @model {
  email: ID! @primaryKey
  firstName: String @default(value: "")
  lastName: String @default(value: "")
  street: String @default(value: "")
  city: String @default(value: "")
  state: String @default(value: "")
  zipcode: String @default(value: "")
  growingSeasonLength: Int!
  firstGdd45: String!
  lastGdd45: String!
  hardinessZone: String!
  managementMethods: [ManagementMethod] @hasMany
  nativePlants: [NativePlant] @hasMany
}

type ManagementMethod @model {
  methodId: ID! @primaryKey
  weedId: Weed! @hasOne
  name: String!
  description: String!
  january: Int!
  february: Int!
  march: Int!
  april: Int!
  may: Int!
  june: Int!
  july: Int!
  august: Int!
  september: Int!
  october: Int!
  november: Int!
  december: Int!
}

type NativePlant @model {
  nativeId: ID! @primaryKey
  botanicalName: String!
    @index(
      name: "byBotanicalNameAndGrowingParams"
      queryField: "nativePlantByBotanicalName"
      sortKeyFields: ["sun", "height", "bloomTime"]
    )
  commonName: String!
    @index(
      name: "byCommonNameAndGrowingParams"
      queryField: "nativePlantByCommonName"
      sortKeyFields: ["sun", "height", "bloomTime"]
    )
  moisture: String!
  sun: String!
  height: String!
  bloomTime: String!
  src: String!
}

type UserNativePlant @model {
  id: ID!
  nativeId: NativePlant @hasOne
  projectNotes: String!
}
